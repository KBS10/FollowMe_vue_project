@startuml

title Follow Me All Sequence diagram

actor Patient
actor MedicalTeam
actor Admin
control Laravel
boundary FCM
control Python
database RDS
boundary Beacon
boundary BeaconScanner
boundary Port
control ServerSide


== 비콘 노드 설정 및 비콘 Data 보기 ==

MedicalTeam -> Admin : 축적된 실내 도면 및 병원진로에 대한 축적 약도 줌
activate MedicalTeam
activate Admin
Admin -> Admin : 축적 된 실내 도면을 가지고 비콘 갯수, 비콘 위치 설정
note right
Admin은 측정된 비콘의 Data의 값에 따라 비콘의 갯수와 위치를 파악 하기전
비콘의 데이터에 대해서 지속적인 실험
end note

Admin -> Laravel : Request : 비콘에 대한 노드 설정
activate Laravel
Laravel -> RDS : Query : 비콘 Data Node 설정
activate RDS
RDS -> Laravel : Query : Node로 설정된 비콘 정보
Laravel -> Admin : Response : Node로 설정된 비콘 정보
deactivate RDS
deactivate Laravel
Admin -> MedicalTeam : 직접 방문하여 비콘 설치
deactivate MedicalTeam
deactivate Admin


alt 실시간 비콘 신호 확인
Admin -> Python : socket : 비콘의 데이터패킷(UUID, major, minor, RSSI) 정보 요청
activate Admin
activate Python

Beacon -> BeaconScanner : 데이터 패킷(UUID, major, minor, RSSI) 정보 발신
activate Beacon
activate BeaconScanner
BeaconScanner -> Python : 실시간 비콘의 데이터 패킷 전달
deactivate Beacon
deactivate BeaconScanner
Python --> Admin : socket : 비콘의 데이터 패킷 정보
deactivate Admin
deactivate Python
end alt
note right
RSSI값이 측정이 안될 시 오류 발생
end note

'---------------------------------------------------------------------------------------------------

== 사용자 서비스 ==
== 로그인 ==

Patient -> Laravel : 로그인
activate Patient
activate Laravel
MedicalTeam -> Laravel : 로그인
Admin -> Laravel : 로그인
Patient -> Laravel : Request : ID, PW 입력
Laravel -> RDS : Query : ID, PW 확인
activate RDS

alt 로그인 실패
RDS --> Laravel : Query : 일치하는 ID, PW 가 없음
Laravel --> Patient : Response : 로그인 에러

else 로그인 성공
RDS --> Laravel : Query : 유저,관리자,의료진 정보 획득
deactivate RDS
Laravel -> FCM : Request : FCM 토큰
activate FCM
FCM --> Laravel : Response : FCM 토큰
deactivate FCM
Laravel --> Patient : Query : 유저,관리자,의료진 정보 획득
Patient -> Patient : QR코드 생성(Andriod)
deactivate Laravel
end

alt 진행 중인 진료 동선이 존재
Patient -> Laravel : Response : 등록된 진료 동선 조회(토큰)
activate Laravel
Laravel -> RDS : Query : 주문 목록 조회
activate RDS
RDS --> Laravel : Query : 주문 정보 조회 결과
deactivate RDS
Laravel --> Patient : Response : 주문 정보 조회 결과
deactivate Laravel
deactivate Patient
end

== 의료진 환자 등록 및 진료 설정 및 환자 진료동선 안내==

alt 등록된 환자 정보가 없을 때
alt 어플을 사용 하는 환자
Patient -> MedicalTeam : Show : 개인 QR코드
activate Patient
activate MedicalTeam
MedicalTeam -> Laravel : Request : 환자 정보 요청
activate Laravel
Laravel -> RDS : Query : 환자 정보 등록
activate RDS
RDS --> Laravel : Query : 환자 정보 조회
Laravel --> MedicalTeam : Response : 해당 환자 조회 획득
deactivate RDS
deactivate MedicalTeam
else 어플을 사용하지 않는 환자
Patient -> MedicalTeam : 환자 정보 알려줌.
activate MedicalTeam

MedicalTeam -> Laravel : Request 외래 환자 등록
Laravel -> RDS : Query : 외래 환자 정보 등록
activate RDS
RDS --> Laravel : Query : 외래 환자 정보 조회
deactivate RDS
Laravel --> MedicalTeam : Response : 외래 환자 정보 조회
deactivate Laravel
deactivate MedicalTeam
end
end

MedicalTeam -> Laravel : Request : 환자 정보 탐색
activate Laravel
activate MedicalTeam
Laravel -> RDS : Query : 해당 된 환자 정보 조회
activate RDS
RDS --> Laravel : Query : 해당 된 환자 정보 조회 결과
Laravel --> MedicalTeam : Response 해당 된 환자 정보 조회 결과
MedicalTeam -> Laravel : Request 해당 환자의 진료 동선 설정

Laravel -> RDS : Query : 해당 환자의 진료 동선 등록

RDS --> Laravel : Response : 해당 환자의 진료 동선 조회
deactivate RDS
note right
진료 동선에 대해 수정 사항이 있을 경우
이와 같은 방법을 반복
end note
Laravel --> MedicalTeam : Request : 해당 환자의 진료동선 조회
deactivate MedicalTeam

alt 실내 측위 시스템
Beacon -> Patient : Bluetooth 통신 : 비콘 Data 얻음
Patient -> Python : Request : 실시간 위치 좌표
activate Python
Python -> Python : 실내 측위 알고리즘
Python --> Patient : Response 실시간 위치 좌표
deactivate Python
end alt

Patient -> Laravel : Request : 진료동선 조회
Laravel -> RDS : Query : 환자의 진료 동선 조회
activate RDS
RDS --> Laravel : Query : 환자의 진료 동선 조회 결과
deactivate RDS
Laravel --> Patient: Response : 환자의 진료 동선 조회
deactivate Patient
deactivate Laravel

alt 실내 내비게이션 시스템
Patient -> Laravel : Request : 전체 경로 보기
activate Patient
activate Laravel
Laravel -> RDS : Query : 해당 환자의 경로가 있는지 파악
activate RDS
alt 해당 환자의 경로가 있을 때
RDS -> Laravel : Query : 해당 환자의 경로
else 해당 환자의 경로가 없을 때
RDS -> Laravel : Query : 경로가 없음
Laravel --> Patient : Response : Error message 경로가 없음
deactivate RDS
end alt
note right
환자는 실내 측위에 대한 데이터를 Laravel 에게 던져주어서
가장 가까운 노드를 찾음
end note
Laravel -> Laravel : 다익스트라 알고리즘

note right
환자가 경로를 벗어났을 경우, 가장 가까운 노드를 찾아 다시 다익스트라 알고리즘 돌림
end note
Laravel --> Patient : Response : 전체 경로

deactivate Patient
deactivate Laravel
alt end

Patient -> Laravel : Request : 대기순번 요청
activate Patient
alt 대기순번 조회가 될 경우
activate Laravel
Laravel -> RDS : Query : 대기순번 조회
activate RDS
RDS -> Laravel : Query : 대기순번
Laravel --> Patient : Response : 대기순번
else 대기순번 조회가 안 될 경우
RDS -> Laravel : Query : 대기순번 없음 (Null 반환)
deactivate RDS
Laravel --> Patient : Response : Error message
deactivate Laravel
deactivate Patient
end alt

== 진료가 끝난 후 ==
Patient -> MedicalTeam : Request : 진료완료 요청(QR코드)
activate Patient
activate MedicalTeam
MedicalTeam -> Laravel : Request : 해당 환자 진료완료 등록
deactivate MedicalTeam
activate Laravel
Laravel -> RDS : Query : 진료 완료 등록
activate RDS
RDS -> Laravel : Query : 진료 완료 등록
deactivate RDS
Laravel --> MedicalTeam : Response : 진료 완료
Laravel --> Patient : Response : 진료 완료
deactivate Laravel
deactivate Patient
== 결제 ==
Patient -> Laravel : Request : 결제 내역 조회
activate Patient
activate Laravel
Laravel -> RDS : Query : 결제 내역 조회
activate RDS
RDS -> Laravel : Query : 결제 내역 결과
Laravel --> Patient : Response : 결제 내역 결과
deactivate Laravel
deactivate RDS


alt 결제 내역이 있을 시 Import 결제 버튼 활성화
Patient -> Port : 결제 요청
activate Port
Port -> Port : 결제 요청 결과 서버에 적용하기(결제 성공, 실패 여부에 따라 자사 서버에 데이터를 전달.)
Port -> ServerSide : 거래정보 조회를 위한 데이터를 통해 거래 검증 진행
activate ServerSide
ServerSide -> Patient : 결제 완료
deactivate ServerSide
deactivate Port
deactivate Patient
end alt


@enduml